name: Python

on: [pull_request, push, workflow_dispatch]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        poetry-version: ["latest"]
        include:
          - python-version: "3.8"
            poetry-version: "1.8.5"

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      id: setup-python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: ${{ matrix.poetry-version }}
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Poetry cache
      id: poetry_cache
      uses: actions/cache@v4
      with:
        save-always: true
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-

    - name: Install dependencies
      run: |
        poetry install --with dev --with test
    - name: Test with pytest
      run: |
        python --version
        echo "import tests.actions_test" > test.py
        poetry run coverage run --source facenet_pytorch/models,examples tests/actions_test.py
        poetry run coverage report
        poetry run coverage xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      if: ${{ matrix.python-version == '3.12' }}
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
