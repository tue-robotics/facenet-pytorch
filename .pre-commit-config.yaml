# can be used to exclude certain regex patterns or paths
exclude: '^$'
# if set to true, fails on first failure
fail_fast: false
repos:
  # The following pre-commit hooks could be very useful.
  # They are not part of CI/CD, so use or remove them as you please
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
    - id: trailing-whitespace
    - id: end-of-file-fixer
    - id: debug-statements
    - id: name-tests-test
      args: [
        "--pytest-test-first" # test_.*\.py
        #"--pytest" # .*_test\.py
        #"--unittest" # test.*\.py
      ]
    - id: check-added-large-files
    - id: check-docstring-first
    - id: check-executables-have-shebangs
    - id: check-shebang-scripts-are-executable
    - id: check-merge-conflict
    - id: check-yaml
      args: ['--unsafe']
    - id: check-toml
    - id: check-xml
    - id: detect-private-key

  - repo: https://gitlab.com/bmares/check-json5
    rev: v1.0.0
    hooks:
    - id: check-json5

  - repo: https://github.com/DavidAnson/markdownlint-cli2
    rev: v0.13.0
    hooks:
      - id: markdownlint-cli2
        args: [ "--fix", "--config", ".markdownlint.yaml" ]

  # part of CI/CD
  - repo: local
    hooks:
      - id: poetry-check
        name: poetry-check --lock
        description: run poetry check to validate config
        entry: poetry check --lock
        language: python
        pass_filenames: false
        files: ^(.*/)?pyproject\.toml$
#      - id: poetry-export
#        name: poetry-export
#        description: run poetry export to sync lock file with requirements.txt
#        entry: poetry export
#        language: python
#        pass_filenames: false
#        files: ^(.*/)?poetry\.lock$
#        args: ["-f", "requirements.txt", "-o", "requirements.txt"]
#      - id: poetry-export-dev
#        name: poetry-export --with-dev
#        description: run poetry export to sync lock file with requirements.txt
#        entry: poetry export
#        language: python
#        pass_filenames: false
#        files: ^(.*/)?poetry\.lock$
#        args: ["--with", "dev", "-f", "requirements.txt", "-o", "requirements-dev.txt"]

      - id: ruff-format
        name: ruff-format
        description: "Run 'ruff format' for extremely fast Python formatting"
        entry: ruff format --force-exclude
        language: python
        types_or: [python, pyi]
        args: []
      - id: ruff
        name: ruff
        description: Run 'ruff' for extremely fast Python linting
        entry: ruff check --force-exclude
        language: python
        types_or: [python, pyi]
        args: [--fix]
